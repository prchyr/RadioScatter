this is the RadioScatter module. It has been made to run independently of, or within, GEANT4. It simulates RF scattering from points in 4 space, which may be ionization deposits left by particle showers produced in geant4. it is highly customizable. the module slac_rf is g4 source code that will produce histograms of voltages received in a scattering experiment. to use it, you need to have GEANT4 and know how to use it (somewhat) and also have the RadioScatter source, which i suggest doing like so: (assuming you have the correct privileges to write to your /usr/local directory (you should))

********************************
default installation (suggested)
********************************

cd /usr/local/
git clone https://github.com/prchyr/RadioScatter.git
cd RadioScatter
./install.sh


this will install the header files and shared libraries (for root analysis) to the right places. it will put the libs inside of /usr/local/lib and the header files in /usr/local/include. 

*********************************
fancy installation
*********************************

cd /your/chosen/dir
git clone https://github.com/prchyr/RadioScatter.git



there is currently no documentation beyond this readme, comments in the header file, and a paper:

http://arxiv.org/abs/1710.02883

The included slac_rf module is built around one of the GEANT4 examples, and i only claim responsibility for my changes-the underlying beauty of GEANT4 is not in any way my doing!

installing::


how it works, breifly:

The RadioScatter module calculates rf scattering from a point in 4 space. this point can be anything. it is most useful to have the points be from some monte-carlo generation, like GEANT4, which is what i used to write it. you can probably fit it into any MC program with relative ease. 

the Radioscatter.hh file is just a header file that needs to be included in the GEANT4 source. there should be several different ways to use it, but one way is to globally declare the RadioScatter object in the action initialization file, which is called in the main .cc file of the simulation. it is then best to pass the constructed radio scatter object within the action initialization to the run action and stepping action files of the simulation. this will allow access to different methods that are useful at different points in the sumulation lifetime. for example, the data is filled during the stepping action phase, but the ROOT histograms are cosed at the end of the run action, through a built in GEANT4 method called EndOfRunAction. 

there are also several commands available through the RSmessenger.hh/cc files which allow for manipulation of the radioscatter configuration through the GEANT4 macro files. things such as

/RS/setTxPos 5 0 3 m

and

/RS/setTxVoltage 200
/RS/setShowCWFlag 1

which can be used without the need to re-compile the GEANT4 source.

if you are using this, you likely have GEANT4 running and know how to use cmake somewhat. first thing, you need to set 2 environment variables.

RS_SOURCE_DIR is where the RadioScatter folder is. at the moment, please install RadioScatter under /usr/local/include. and set

RS_SOURCE_DIR=/usr/local/include/RadioScatter

then, you can set LIB_INSTALL_DIR to something other than /usr/local/lib if you don't want the libraries installed there. 

so once you've done that, do this:

mkdir <build dir somewhere>
cd <build dir somewhere>
cmake path/to/RadioScatter/slac_rf
make -B -j4
make install

where the -B just says to build all objects (can't be too careful) and the -j4 uses 4 cores. hopefully it finds all the things...CLHEP must be installed, but this is done through GEANT4, typically, so if G4 rund on your machine, this should too..

then run by doing

./slac_rf -m run1.mac -f "/path/to/file/and/filename.root"

to set the root file name. each run is stored in an entry in a tree.

it might work for you. i hope it does. but it probably won't, at this point.