# Macro file for the visualization setting for the initialization phase 
# of the B4 example when running in interactive mode
#
/analysis/verbose 0
# Use these open statements to open selected visualization
#
# Use this open statement to create an OpenGL view:
/vis/open OGL 600x600-0+0
#
# Use this open statement to create an OpenInventor view:
#/vis/open OIX
#
# Use this open statement to create a .prim file suitable for
# viewing in DAWN:
#/vis/open DAWNFILE
#
# Use this open statement to create a .heprep file suitable for
# viewing in HepRApp:
#/vis/open HepRepFile
#
# Use this open statement to create a .wrl file suitable for
# viewing in a VRML viewer:
#/vis/open VRML2FILE
#
# Disable auto refresh and quieten vis messages whilst scene and
# trajectories are established:
/vis/viewer/set/autoRefresh false
/vis/verbose errors
#
# Draw geometry:
/vis/drawVolume
#
# Specify view angle:
/vis/viewer/set/viewpointThetaPhi 245. -20.
#
# Specify zoom value:
#/vis/viewer/zoom 2.
#
# Specify style (surface, wireframe, auxiliary edges,...)
/vis/viewer/set/style wireframe
/vis/viewer/set/auxiliaryEdge true
/vis/viewer/set/lineSegmentsPerCircle 100
#
# Draw coordinate axes:
#/vis/scene/add/axes 0 0 0 1 m
#
# Draw smooth trajectories at end of event, showing trajectory points
# as markers 2 pixels wide:
/vis/scene/add/trajectories smooth
/vis/modeling/trajectories/create/drawByCharge
/vis/modeling/trajectories/drawByCharge-0/default/setDrawStepPts true
/vis/modeling/trajectories/drawByCharge-0/default/setStepPtsSize 1
# (if too many tracks cause core dump => /tracking/storeTrajectory 0)
#
# Draw hits at end of event:
#/vis/scene/add/hits
#
# To draw only gammas:
/vis/filtering/trajectories/create/particleFilter
/vis/filtering/trajectories/particleFilter-0/add gamma
#
# To invert the above, drawing all particles except gammas,
# keep the above two lines but also add:
/vis/filtering/trajectories/particleFilter-0/invert true
#



# Many other options are available with /vis/modeling and /vis/filtering.
# For example, to select colour by particle ID:
/vis/modeling/trajectories/create/drawByParticleID
#/vis/modeling/trajectories/drawByParticleID-0/default/setDrawStepPts true
#/vis/scene/add/scale  # Simple scale line
/vis/scene/add/text 5 .2 2.3 m 16 0 0 daq
/vis/scene/add/text 0 -.3 2 m 11 0 0 tanks
/vis/set/textColour white 
/vis/scene/add/text 0 -.3 -.5 m 11 0 0 Fe shower plate
/vis/scene/add/text 0 0 4 m 11 0 0 Pb absorber
/vis/set/textColour green
/vis/scene/add/text 5 .2 1.6 m 16 0 0 rx
/vis/scene/add/text -5 .2 1.6 m 16 0 0 tx
/vis/set/textColour red
/vis/set/textLayout right
/vis/scene/add/text2D 0.9 -.9 24 ! ! SLAC target


# To select or override default colours (note: e+ is blue by default):
#/vis/modeling/trajectories/list
/vis/modeling/trajectories/drawByParticleID-0/set e+ white
#
# To superimpose all of the events from a given run:
/vis/scene/endOfEventAction accumulate
#
# Re-establish auto refreshing and verbosity:
#/vis/viewer/set/autoRefresh true
/vis/verbose warnings
#
# For file-based drivers, use this to create an empty detector view:
#/vis/viewer/flush
/vis/geometry/set/visibility World 0 false
/vis/geometry/set/colour Ice 0 .2 .2 1 .3
/vis/geometry/set/colour Abso 0 1 1 1 .9
#/vis/geometry/set/colour Air 0 0 0 1 .5
/vis/geometry/set/colour Ps 0 .1 .9 1 .7
/vis/ogl/set/displayListLimit 5000000