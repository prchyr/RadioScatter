# $Id: CMakeLists.txt 100923 2016-11-03 10:50:34Z gcosmo $

#----------------------------------------------------------------------------
# Setup the project
#
cmake_minimum_required(VERSION 2.6 FATAL_ERROR)
project(slac)

#----------------------------------------------------------------------------
# Find Geant4 package, activating all available UI and Vis drivers by default
# You can set WITH_GEANT4_UIVIS to OFF via the command line or ccmake/cmake-gui
# to build a batch mode only executable
#
option(WITH_GEANT4_UIVIS "Build example with Geant4 UI and Vis drivers" ON)
if(WITH_GEANT4_UIVIS)
  find_package(Geant4 REQUIRED ui_all vis_all)
else()
  find_package(Geant4 REQUIRED)
endif()

find_package(CLHEP REQUIRED)

#get the root libs to link
# execute_process(
#   COMMAND  root-config --libs --cflags --glibs
#   OUTPUT_VARIABLE ROOT_LIBS
#   OUTPUT_STRIP_TRAILING_WHITESPACE
#   )



#try to make a library
set(libname "radioscatter")
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake/modules/")
list(APPEND CMAKE_PREFIX_PATH $ENV{ROOTSYS})

find_package(ROOT REQUIRED COMPONENTS RIO net Tree)

#include(ROOT_USE_FILE)

set(RS_INCLUDE_DIR /usr/local/include/RadioScatter)
set(RS_LIB_DIR /usr/local/include/RadioScatter)


# link_directories(${ROOT_LIBRARY_DIR})

# #---Set Flags------------------------------------------------------------\-------------------------
add_definitions(${ROOT_DEFINITIONS})
# set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${ROOT_CXX_FLAGS} -fPIC")
# set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${ROOT_C_FLAGS}")
# set(CMAKE_fortran_FLAGS "${CMAKE_fortran_FLAGS} ${ROOT_fortran_FLAGS}")




# #get the clhep libs to link
# # execute_process(
# #   COMMAND  clhep-config --libs
# #   OUTPUT_VARIABLE CLHEP_LIBS
# #   OUTPUT_STRIP_TRAILING_WHITESPACE
# #   )

#   #----------------------------------------------------------------------------
# # Setup Geant4 include directories and compile definitions
# Setup include directory for this project
#

include(${Geant4_USE_FILE})
include_directories(${PROJECT_SOURCE_DIR} ${PROJECT_SOURCE_DIR}/include ${CLHEP_INCLUDE_DIRS} ${ROOT_INCLUDE_DIRS} ${RS_INCLUDE_DIR})
#add_definitions(${ROOT_CXX_FLAGS})
#----------------------------------------------------------------------------
# Locate sources and headers for this project
# NB: headers are included so they will show up in IDEs
#
file(GLOB sources ${PROJECT_SOURCE_DIR}/src/*.cc ${RS_INCLUDE_DIR}/*.cc)
file(GLOB headers ${PROJECT_SOURCE_DIR}/include/*.hh ${RS_INCLUDE_DIR}/*.hh)

file(GLOB SOURCE_FILES ${PROJECT_SOURCE_DIR}/src/*.cc ${RS_INCLUDE_DIR}/*.cc )
file(GLOB HEADER_FILES ${RS_INCLUDE_DIR}/*.hh ${CLHEP_INCLUDE_DIRS}/*.hh)
#----------------------------------------------------------------------------
# Add the executable, and link it to the Geant4 libraries
#

# set(DICTNAME G__${libname})
# ROOT_GENERATE_DICTIONARY(${DICTNAME} ${HEADER_FILES} LINKDEF ${RS_INCLUDE_DIR}LinkDef.h)
# add_library(${libname} SHARED ${sources} ${DICTNAME}.cxx)
# target_link_libraries(${libname} ${ROOT_LIBRARIES})
# add_custom_target(${DICTNAME}.pcm DEPENDS ${DICTNAME})
# install(TARGETS ${libname} DESTINATION $RS_LIB_DIR)
ROOT_GENERATE_DICTIONARY(G__EventTree ${RS_INCLUDE_DIR}/EventTree.hh LINKDEF ${RS_INCLUDE_DIR}/LinkDef.h)
add_library(EventTree SHARED ${RS_INCLUDE_DIR}/EventTree.cc G__EventTree.cxx)
target_link_libraries(EventTree ${ROOT_LIBRARIES})

add_executable(slac slac.cc ${sources} ${headers})
target_link_libraries(slac  ${Geant4_LIBRARIES} ${ROOT_LIBRARIES} EventTree)
#target_link_libraries(slac  ${Geant4_LIBRARIES} ${ROOT_LIBRARIES} ${libname})


#----------------------------------------------------------------------------
# Copy all scripts to the build directory, i.e. the directory in which we
# build B4a. This is so that we can run the executable directly because it
# relies on these scripts being in the current working directory.
#
set(SLAC_SCRIPTS
  slac.out
  slac.in
  gui.mac
  init_vis.mac
  run1.mac
  run2.mac
  vis.mac
  )

foreach(_script ${SLAC_SCRIPTS})
  configure_file(
    ${PROJECT_SOURCE_DIR}/${_script}
    ${PROJECT_BINARY_DIR}/${_script}
    COPYONLY
    )
endforeach()

#----------------------------------------------------------------------------
# Install the executable to 'bin' directory under CMAKE_INSTALL_PREFIX
#
install(TARGETS slac DESTINATION bin)
